syntax = "proto3";

package mythos.wacca.v0;

import "wacca/common.proto";

service WaccaUser {
  rpc GetData(DataRequest) returns (DataResponse);
  rpc GetPlaylog(PlaylogRequest) returns (stream PlaylogStreamItem);
  // <unused rpcs removed from Tachi>
}

message DataRequest {
  string api_id = 1;
}

message DataResponse {
  message VersionData {
    message LastSong {
      int32 music_id = 1;
      WaccaMusicDifficulty music_difficulty = 2;
    }

    int32 rank = 1;
    int32 dan_rank = 2;
    int32 rating = 3;

    repeated int32 title_part_ids = 4;

    string last_app_version = 5;
    LastSong last_song = 6;
    int32 last_song_sort = 7;
    int32 last_folder = 8;
    int32 last_folder_sort = 9;
    string last_browsed_song_list = 10;

    map<int32, bool> tutorial_state = 11;
  }

  string user_name = 1;
  int32 exp = 2;
  int32 points = 3;
  repeated int32 favorite_music_entries = 4;
  map<int32, VersionData> version_data = 5;
}

// <unused messages removed from Tachi>

message PlaylogRequest {
  string api_id = 1;
  optional int32 music_id = 2;
}

message PlaylogStreamItem {
  string playlog_api_id = 1;
  PlaylogInfo info = 2;
}

message PlaylogInfo {
  int32 music_id = 1;
  WaccaMusicDifficulty music_difficulty = 2;
  int32 score = 3;
  WaccaMusicScoreGrade grade = 4;
  WaccaJudge judge = 5;
  WaccaClearStatus clear_status = 6;
  bool is_new_record = 7;
  int32 combo = 8;
  int32 skill_points = 9;
  int32 fast = 10;
  int32 late = 11;
  WaccaPlayMode user_play_mode = 12;
  int32 track = 13;
  string user_play_date = 14;
}

// source: wacca/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var wacca_common_pb = require('../wacca/common_pb.js');
goog.object.extend(proto, wacca_common_pb);
goog.exportSymbol('proto.mythos.wacca.v0.DataRequest', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.DataResponse', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.DataResponse.VersionData', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.DataResponse.VersionData.LastSong', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.PlaylogInfo', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.PlaylogRequest', null, global);
goog.exportSymbol('proto.mythos.wacca.v0.PlaylogStreamItem', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.DataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mythos.wacca.v0.DataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.DataRequest.displayName = 'proto.mythos.wacca.v0.DataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.DataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mythos.wacca.v0.DataResponse.repeatedFields_, null);
};
goog.inherits(proto.mythos.wacca.v0.DataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.DataResponse.displayName = 'proto.mythos.wacca.v0.DataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.DataResponse.VersionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mythos.wacca.v0.DataResponse.VersionData.repeatedFields_, null);
};
goog.inherits(proto.mythos.wacca.v0.DataResponse.VersionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.DataResponse.VersionData.displayName = 'proto.mythos.wacca.v0.DataResponse.VersionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mythos.wacca.v0.DataResponse.VersionData.LastSong, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.displayName = 'proto.mythos.wacca.v0.DataResponse.VersionData.LastSong';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.PlaylogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mythos.wacca.v0.PlaylogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.PlaylogRequest.displayName = 'proto.mythos.wacca.v0.PlaylogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.PlaylogStreamItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mythos.wacca.v0.PlaylogStreamItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.PlaylogStreamItem.displayName = 'proto.mythos.wacca.v0.PlaylogStreamItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mythos.wacca.v0.PlaylogInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mythos.wacca.v0.PlaylogInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mythos.wacca.v0.PlaylogInfo.displayName = 'proto.mythos.wacca.v0.PlaylogInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.DataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.DataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.DataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.DataRequest}
 */
proto.mythos.wacca.v0.DataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.DataRequest;
  return proto.mythos.wacca.v0.DataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.DataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.DataRequest}
 */
proto.mythos.wacca.v0.DataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.DataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.DataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.DataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string api_id = 1;
 * @return {string}
 */
proto.mythos.wacca.v0.DataRequest.prototype.getApiId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.DataRequest} returns this
 */
proto.mythos.wacca.v0.DataRequest.prototype.setApiId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mythos.wacca.v0.DataResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.DataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.DataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.DataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    points: jspb.Message.getFieldWithDefault(msg, 3, 0),
    favoriteMusicEntriesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    versionDataMap: (f = msg.getVersionDataMap()) ? f.toObject(includeInstance, proto.mythos.wacca.v0.DataResponse.VersionData.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.DataResponse}
 */
proto.mythos.wacca.v0.DataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.DataResponse;
  return proto.mythos.wacca.v0.DataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.DataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.DataResponse}
 */
proto.mythos.wacca.v0.DataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPoints(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFavoriteMusicEntries(values[i]);
      }
      break;
    case 5:
      var value = msg.getVersionDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.mythos.wacca.v0.DataResponse.VersionData.deserializeBinaryFromReader, 0, new proto.mythos.wacca.v0.DataResponse.VersionData());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.DataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.DataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.DataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFavoriteMusicEntriesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getVersionDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.mythos.wacca.v0.DataResponse.VersionData.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mythos.wacca.v0.DataResponse.VersionData.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.DataResponse.VersionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.VersionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, 0),
    danRank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rating: jspb.Message.getFieldWithDefault(msg, 3, 0),
    titlePartIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    lastAppVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastSong: (f = msg.getLastSong()) && proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.toObject(includeInstance, f),
    lastSongSort: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lastFolder: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lastFolderSort: jspb.Message.getFieldWithDefault(msg, 9, 0),
    lastBrowsedSongList: jspb.Message.getFieldWithDefault(msg, 10, ""),
    tutorialStateMap: (f = msg.getTutorialStateMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.DataResponse.VersionData;
  return proto.mythos.wacca.v0.DataResponse.VersionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDanRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTitlePartIds(values[i]);
      }
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastAppVersion(value);
      break;
    case 6:
      var value = new proto.mythos.wacca.v0.DataResponse.VersionData.LastSong;
      reader.readMessage(value,proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.deserializeBinaryFromReader);
      msg.setLastSong(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastSongSort(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastFolder(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastFolderSort(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastBrowsedSongList(value);
      break;
    case 11:
      var value = msg.getTutorialStateMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readBool, null, 0, false);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.DataResponse.VersionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.VersionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDanRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTitlePartIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getLastAppVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastSong();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.serializeBinaryToWriter
    );
  }
  f = message.getLastSongSort();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLastFolder();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLastFolderSort();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getLastBrowsedSongList();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTutorialStateMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeBool);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.toObject = function(includeInstance, msg) {
  var f, obj = {
    musicId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    musicDifficulty: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.DataResponse.VersionData.LastSong;
  return proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMusicId(value);
      break;
    case 2:
      var value = /** @type {!proto.mythos.wacca.v0.WaccaMusicDifficulty} */ (reader.readEnum());
      msg.setMusicDifficulty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMusicId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMusicDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int32 music_id = 1;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.getMusicId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.setMusicId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WaccaMusicDifficulty music_difficulty = 2;
 * @return {!proto.mythos.wacca.v0.WaccaMusicDifficulty}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.getMusicDifficulty = function() {
  return /** @type {!proto.mythos.wacca.v0.WaccaMusicDifficulty} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mythos.wacca.v0.WaccaMusicDifficulty} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.LastSong.prototype.setMusicDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 rank = 1;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 dan_rank = 2;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getDanRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setDanRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rating = 3;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 title_part_ids = 4;
 * @return {!Array<number>}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getTitlePartIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setTitlePartIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.addTitlePartIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.clearTitlePartIdsList = function() {
  return this.setTitlePartIdsList([]);
};


/**
 * optional string last_app_version = 5;
 * @return {string}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastAppVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastAppVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LastSong last_song = 6;
 * @return {?proto.mythos.wacca.v0.DataResponse.VersionData.LastSong}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastSong = function() {
  return /** @type{?proto.mythos.wacca.v0.DataResponse.VersionData.LastSong} */ (
    jspb.Message.getWrapperField(this, proto.mythos.wacca.v0.DataResponse.VersionData.LastSong, 6));
};


/**
 * @param {?proto.mythos.wacca.v0.DataResponse.VersionData.LastSong|undefined} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
*/
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastSong = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.clearLastSong = function() {
  return this.setLastSong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.hasLastSong = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 last_song_sort = 7;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastSongSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastSongSort = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 last_folder = 8;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastFolder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastFolder = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 last_folder_sort = 9;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastFolderSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastFolderSort = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string last_browsed_song_list = 10;
 * @return {string}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getLastBrowsedSongList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.setLastBrowsedSongList = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * map<int32, bool> tutorial_state = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,boolean>}
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.getTutorialStateMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,boolean>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.mythos.wacca.v0.DataResponse.VersionData} returns this
 */
proto.mythos.wacca.v0.DataResponse.VersionData.prototype.clearTutorialStateMap = function() {
  this.getTutorialStateMap().clear();
  return this;};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.mythos.wacca.v0.DataResponse.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 exp = 2;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 points = 3;
 * @return {number}
 */
proto.mythos.wacca.v0.DataResponse.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 favorite_music_entries = 4;
 * @return {!Array<number>}
 */
proto.mythos.wacca.v0.DataResponse.prototype.getFavoriteMusicEntriesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.setFavoriteMusicEntriesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.addFavoriteMusicEntries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.clearFavoriteMusicEntriesList = function() {
  return this.setFavoriteMusicEntriesList([]);
};


/**
 * map<int32, VersionData> version_data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.mythos.wacca.v0.DataResponse.VersionData>}
 */
proto.mythos.wacca.v0.DataResponse.prototype.getVersionDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.mythos.wacca.v0.DataResponse.VersionData>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.mythos.wacca.v0.DataResponse.VersionData));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.mythos.wacca.v0.DataResponse} returns this
 */
proto.mythos.wacca.v0.DataResponse.prototype.clearVersionDataMap = function() {
  this.getVersionDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.PlaylogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.PlaylogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    musicId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.PlaylogRequest}
 */
proto.mythos.wacca.v0.PlaylogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.PlaylogRequest;
  return proto.mythos.wacca.v0.PlaylogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.PlaylogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.PlaylogRequest}
 */
proto.mythos.wacca.v0.PlaylogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMusicId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.PlaylogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.PlaylogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string api_id = 1;
 * @return {string}
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.getApiId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.PlaylogRequest} returns this
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.setApiId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 music_id = 2;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.getMusicId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogRequest} returns this
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.setMusicId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mythos.wacca.v0.PlaylogRequest} returns this
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.clearMusicId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mythos.wacca.v0.PlaylogRequest.prototype.hasMusicId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.PlaylogStreamItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.PlaylogStreamItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogStreamItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    playlogApiId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.mythos.wacca.v0.PlaylogInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.PlaylogStreamItem}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.PlaylogStreamItem;
  return proto.mythos.wacca.v0.PlaylogStreamItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.PlaylogStreamItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.PlaylogStreamItem}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaylogApiId(value);
      break;
    case 2:
      var value = new proto.mythos.wacca.v0.PlaylogInfo;
      reader.readMessage(value,proto.mythos.wacca.v0.PlaylogInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.PlaylogStreamItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.PlaylogStreamItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogStreamItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylogApiId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mythos.wacca.v0.PlaylogInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playlog_api_id = 1;
 * @return {string}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.getPlaylogApiId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.PlaylogStreamItem} returns this
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.setPlaylogApiId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PlaylogInfo info = 2;
 * @return {?proto.mythos.wacca.v0.PlaylogInfo}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.getInfo = function() {
  return /** @type{?proto.mythos.wacca.v0.PlaylogInfo} */ (
    jspb.Message.getWrapperField(this, proto.mythos.wacca.v0.PlaylogInfo, 2));
};


/**
 * @param {?proto.mythos.wacca.v0.PlaylogInfo|undefined} value
 * @return {!proto.mythos.wacca.v0.PlaylogStreamItem} returns this
*/
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mythos.wacca.v0.PlaylogStreamItem} returns this
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mythos.wacca.v0.PlaylogStreamItem.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mythos.wacca.v0.PlaylogInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mythos.wacca.v0.PlaylogInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    musicId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    musicDifficulty: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    grade: jspb.Message.getFieldWithDefault(msg, 4, 0),
    judge: (f = msg.getJudge()) && wacca_common_pb.WaccaJudge.toObject(includeInstance, f),
    clearStatus: (f = msg.getClearStatus()) && wacca_common_pb.WaccaClearStatus.toObject(includeInstance, f),
    isNewRecord: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    combo: jspb.Message.getFieldWithDefault(msg, 8, 0),
    skillPoints: jspb.Message.getFieldWithDefault(msg, 9, 0),
    fast: jspb.Message.getFieldWithDefault(msg, 10, 0),
    late: jspb.Message.getFieldWithDefault(msg, 11, 0),
    userPlayMode: jspb.Message.getFieldWithDefault(msg, 12, 0),
    track: jspb.Message.getFieldWithDefault(msg, 13, 0),
    userPlayDate: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mythos.wacca.v0.PlaylogInfo}
 */
proto.mythos.wacca.v0.PlaylogInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mythos.wacca.v0.PlaylogInfo;
  return proto.mythos.wacca.v0.PlaylogInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mythos.wacca.v0.PlaylogInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mythos.wacca.v0.PlaylogInfo}
 */
proto.mythos.wacca.v0.PlaylogInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMusicId(value);
      break;
    case 2:
      var value = /** @type {!proto.mythos.wacca.v0.WaccaMusicDifficulty} */ (reader.readEnum());
      msg.setMusicDifficulty(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {!proto.mythos.wacca.v0.WaccaMusicScoreGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 5:
      var value = new wacca_common_pb.WaccaJudge;
      reader.readMessage(value,wacca_common_pb.WaccaJudge.deserializeBinaryFromReader);
      msg.setJudge(value);
      break;
    case 6:
      var value = new wacca_common_pb.WaccaClearStatus;
      reader.readMessage(value,wacca_common_pb.WaccaClearStatus.deserializeBinaryFromReader);
      msg.setClearStatus(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNewRecord(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCombo(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillPoints(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFast(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLate(value);
      break;
    case 12:
      var value = /** @type {!proto.mythos.wacca.v0.WaccaPlayMode} */ (reader.readEnum());
      msg.setUserPlayMode(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrack(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPlayDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mythos.wacca.v0.PlaylogInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mythos.wacca.v0.PlaylogInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mythos.wacca.v0.PlaylogInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMusicId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMusicDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGrade();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getJudge();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      wacca_common_pb.WaccaJudge.serializeBinaryToWriter
    );
  }
  f = message.getClearStatus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      wacca_common_pb.WaccaClearStatus.serializeBinaryToWriter
    );
  }
  f = message.getIsNewRecord();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getCombo();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSkillPoints();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFast();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLate();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUserPlayMode();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getTrack();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getUserPlayDate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional int32 music_id = 1;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getMusicId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setMusicId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WaccaMusicDifficulty music_difficulty = 2;
 * @return {!proto.mythos.wacca.v0.WaccaMusicDifficulty}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getMusicDifficulty = function() {
  return /** @type {!proto.mythos.wacca.v0.WaccaMusicDifficulty} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mythos.wacca.v0.WaccaMusicDifficulty} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setMusicDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 score = 3;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional WaccaMusicScoreGrade grade = 4;
 * @return {!proto.mythos.wacca.v0.WaccaMusicScoreGrade}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getGrade = function() {
  return /** @type {!proto.mythos.wacca.v0.WaccaMusicScoreGrade} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.mythos.wacca.v0.WaccaMusicScoreGrade} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setGrade = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional WaccaJudge judge = 5;
 * @return {?proto.mythos.wacca.v0.WaccaJudge}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getJudge = function() {
  return /** @type{?proto.mythos.wacca.v0.WaccaJudge} */ (
    jspb.Message.getWrapperField(this, wacca_common_pb.WaccaJudge, 5));
};


/**
 * @param {?proto.mythos.wacca.v0.WaccaJudge|undefined} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
*/
proto.mythos.wacca.v0.PlaylogInfo.prototype.setJudge = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.clearJudge = function() {
  return this.setJudge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.hasJudge = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional WaccaClearStatus clear_status = 6;
 * @return {?proto.mythos.wacca.v0.WaccaClearStatus}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getClearStatus = function() {
  return /** @type{?proto.mythos.wacca.v0.WaccaClearStatus} */ (
    jspb.Message.getWrapperField(this, wacca_common_pb.WaccaClearStatus, 6));
};


/**
 * @param {?proto.mythos.wacca.v0.WaccaClearStatus|undefined} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
*/
proto.mythos.wacca.v0.PlaylogInfo.prototype.setClearStatus = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.clearClearStatus = function() {
  return this.setClearStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.hasClearStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_new_record = 7;
 * @return {boolean}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getIsNewRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setIsNewRecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 combo = 8;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getCombo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setCombo = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 skill_points = 9;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getSkillPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setSkillPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 fast = 10;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getFast = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setFast = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 late = 11;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getLate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setLate = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional WaccaPlayMode user_play_mode = 12;
 * @return {!proto.mythos.wacca.v0.WaccaPlayMode}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getUserPlayMode = function() {
  return /** @type {!proto.mythos.wacca.v0.WaccaPlayMode} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.mythos.wacca.v0.WaccaPlayMode} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setUserPlayMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional int32 track = 13;
 * @return {number}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getTrack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setTrack = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string user_play_date = 14;
 * @return {string}
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.getUserPlayDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.mythos.wacca.v0.PlaylogInfo} returns this
 */
proto.mythos.wacca.v0.PlaylogInfo.prototype.setUserPlayDate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


goog.object.extend(exports, proto.mythos.wacca.v0);
